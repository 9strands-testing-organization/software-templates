apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: spring-boot-backend-template
  title: Create a Spring Boot Backend application with CI/CD
  description: Create a starter Spring Boot backend application managed by ArgoCD with a CI pipeline
  tags:
    - recommended
    - spring-boot
    - java
    - maven
spec:
  owner: janus-authors
  type: service

  parameters:
    - title: Provide information about the GitHub location
      required:
        - github_org
        - repo_name
      properties:
        github_org:
          title: GitHub Organization
          type: string
        repo_name:
          title: Repository Name
          type: string
    - title: Provide information about the new component
      required:
        - owner
        - system
        - application_type
        - group_id
        - artifact_id
        - java_package_name
      properties:
        owner:
          title: Owner
          type: string
          description: Owner of the component
          default: janus-authors
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              - Group
              - User
        system:
          title: System
          type: string
          description: System of the component
          default: examples
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - System
        application_type:
          title: Application Type
          type: string
          description: The application type e.g. website, api, and gitops
          enum:
            - website
            - api
            - gitops
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        group_id:
          title: Group ID
          type: string
          default: io.janus
          description: Maven Group ID eg (io.janus)
        artifact_id:
          title: Artifact ID
          type: string
          default: spring-boot-app
          description: Maven Artifact ID
        java_package_name:
          title: Java Package Namespace
          type: string
          default: io/janus/spring-boot-app
          description: Name for the Java Package (ensure to use the / character as this is used for folder structure) should match Group ID and Artifact ID
    - title: Provide information about the CI method
      required:
        - ci
      properties:
        ci:
          title: Select a CI method
          type: string
          description: This action will create a CI pipeline for your application based on chosen method
          default: ../../scaffolder-skeletons/github-actions-skeleton/
          enum:
            - ../../scaffolder-skeletons/github-actions-skeleton/
            - ../../scaffolder-skeletons/tekton-skeleton/
          enumNames:
            - GitHub Action
            - Tekton
    - title: Provide information about the ArgoCD deployment
      required:
        - image_repository
        - namespace
        - image_url
        - port
      properties:
        image_repository:
          title: Select a registry
          type: string
          default: quay.io
          enum:
            - image-registry.openshift-image-registry.svc:5000
            - quay.io
          enumNames:
            - Internal OpenShift Registry
            - Quay
        image_url:
          title: Image URL
          type: string
          description: Enter the Quay.io or OpenShift Image URL <REGISTRY>/<IMAGE_URL>/<REPO_NAME>
        namespace:
          title: Namespace
          type: string
          default: janus-idp
          description: The namespace for deploying resources
        port:
          title: Port
          type: number
          default: 5000
          description: The port exposed for the application
  steps:
    - id: ci-template
      name: Generating the CI component
      action: fetch:template
      input:
        url: ${{ parameters.ci }}
        copyWithoutTemplating:
          - .github/workflows/
        values:
          github_org: ${{ parameters.github_org }}
          repo_name: ${{ parameters.repo_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          application_type: ${{ parameters.application_type }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          image_url: ${{ parameters.image_url }}
          image_builder: s2i-java
          image_repository: ${{ parameters.image_repository }}
          port: ${{ parameters.port }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}

    - id: template
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./source
        values:
          github_org: ${{ parameters.github_org }}
          repo_name: ${{ parameters.repo_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          application_type: ${{ parameters.application_type }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          image_url: ${{ parameters.image_url }}
          image_builder: s2i-java
          image_repository: ${{ parameters.image_repository }}
          port: ${{ parameters.port }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}

    - id: source-catalog-template
      name: Generating Source Code catalog-info.yaml
      action: fetch:template
      input:
        url: ../../scaffolder-skeletons/catalog-info-skeleton/
        targetPath: ./source
        values:
          github_org: ${{ parameters.github_org }}
          repo_name: ${{ parameters.repo_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          application_type: ${{ parameters.application_type }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          image_url: ${{ parameters.image_url }}
          image_builder: s2i-java
          image_repository: ${{ parameters.image_repository }}
          port: ${{ parameters.port }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}

    - id: gitops-catalog-template
      name: Generating Gitops catalog-info.yaml
      action: fetch:template
      input:
        url: ../../scaffolder-skeletons/catalog-info-skeleton/
        targetPath: ./gitops
        values:
          application_kind: Resource
          github_org: ${{ parameters.github_org }}
          repo_name: ${{ parameters.repo_name }}-gitops
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          application_type: gitops
          description: Contains the ArgoCD manifests for ${{ parameters.repo_name }}
          namespace: ${{ parameters.namespace }}
          image_url: ${{ parameters.image_url }}
          image_builder: s2i-java
          image_repository: ${{ parameters.image_repository }}
          port: ${{ parameters.port }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}

    - id: manifests-template
      name: Generating manifests component
      action: fetch:template
      input:
        url: ../../scaffolder-skeletons/manifests-skeleton/
        targetPath: ./gitops
        values:
          github_org: ${{ parameters.github_org }}
          repo_name: ${{ parameters.repo_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          application_type: ${{ parameters.application_type }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          image_url: ${{ parameters.image_url }}
          image_builder: s2i-java
          image_repository: ${{ parameters.image_repository }}
          port: ${{ parameters.port }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}

    - id: publishSource
      name: Publishing to Source Code Repository
      action: publish:github
      input:
        sourcePath: ./source
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.github_org }}&repo=${{ parameters.repo_name }}
        defaultBranch: main

    - id: publishGitops
      name: Publishing to Gitops Repository
      action: publish:github
      input:
        sourcePath: ./gitops
        allowedHosts: ['github.com']
        description: Contains the ArgoCD manifests for ${{ parameters.repo_name }}
        repoUrl: github.com?owner=${{ parameters.github_org }}&repo=${{ parameters.repo_name }}-gitops
        defaultBranch: main

    - id: registerSource
      name: Registering the Source Code Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishSource.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

    - id: registerGitops
      name: Registering the Gitops Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishGitops.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publishSource.output.remoteUrl }}
      - title: Gitops Repository
        url: ${{ steps.publishGitops.output.remoteUrl }}
      - title: Open Source Code Component in catalog
        icon: catalog
        entityRef: ${{ steps.registerSource.output.entityRef }}
      - title: Open Gitops Component in catalog
        icon: catalog
        entityRef: ${{ steps.registerGitops.output.entityRef }}
